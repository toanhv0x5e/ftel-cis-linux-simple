#!/bin/sh
# cis-linux-simple: script to audit linux using cis benchmark - toanhv2@fpt.com.vn

__name__="__main__"
__mode__="develop"

if [[ $EUID -ne 0 ]]; then
    echo "cis-linux-simple: This script must be run as root" 1>&2
    exit 1
fi

function IncludeFiles {
    WORKDIR=$(pwd)
    INCLUDEDIR="${WORKDIR}/include"

    if [ -f "${INCLUDEDIR}/declarations" ]; then source ${INCLUDEDIR}/declarations; else echo -e "cis-linux-simple: Include file does not exist"; exit 1; fi
    if [ -f "${INCLUDEDIR}/functions" ]; then source ${INCLUDEDIR}/functions; else echo -e "cis-linux-simple: Include file does not exist"; exit 1; fi
}

function main {
    IncludeFiles
    DetectOS # Test profile and depend functions are assigned by DetectOS
    DisplayHeader
    ReloadReport

    grep -v "^#" ${TESTPROFILE} > ${TESTINPUT} 2> /dev/null # Ignore for commented lines
    LINE=$(cat ${TESTINPUT} 2> /dev/null | wc -l 2> /dev/null)
    
    SUBTESTSCORE=1
    INDENT=4

    while IFS=, read f1 f2 f3 f4 f5 f6 f7 f8 f9 f10
    do
        # Unalias temp current command to avoid duplicate
        unalias current_command 2> /dev/null

        # Only test level 1 or 2
        if [ ! -z "${f4}" ]; then
            if [ "${f4}" = "${TESTLEVEL}" ]; then
                case ${f9} in
                    TESTCASE_NULL)
                        alias current_command="${f7}"
                        FIND=$(current_command 2> /dev/null)
                        if [ "${FIND}" =  "" ]; then
                            if [ "${f6}" -lt "${f5}" ]; then
                                continue
                            else 
                                if [ "${SUBTESTSCORE}" = 1 ]; then
                                    AddScore ${f3}
                                    Display --indent "${INDENT}" --text "- ${f2}" --result "OK" --color GREEN
                                    ReportLine "${f1}" "${f2}" "${f3}" "OK"
                                else
                                    Display --indent "${INDENT}" --text "- ${f2}" --result "FAIL" --color RED
                                    ReportLine "${f1}" "${f2}" "${f3}" "FAIL"
                                fi
                            fi
                        else
                            if [ "${f6}" -lt "${f5}" ]; then
                                SUBTESTSCORE=$((${SUBTESTSCORE} - 1))
                                continue
                            else
                                Display --indent "${INDENT}" --text "- ${f2}" --result "FAIL" --color RED
                                ReportLine "${f1}" "${f2}" "${f3}" "FAIL"
                            fi
                        fi
                    ;;

                    TESTCASE_NOTNULL)
                        alias current_command="${f7}"
                        FIND=$(current_command 2> /dev/null)
                        if [ ! "${FIND}" =  "" ]; then
                            if [ "${f6}" -lt "${f5}" ]; then
                                continue
                            else if [ "${SUBTESTSCORE}" = 1 ]; then
                                    AddScore ${f3}
                                    Display --indent "${INDENT}" --text "- ${f2}" --result "OK" --color GREEN
                                    ReportLine "${f1}" "${f2}" "${f3}" "OK"
                                else
                                    Display --indent "${INDENT}" --text "- ${f2}" --result "FAIL" --color RED
                                    ReportLine "${f1}" "${f2}" "${f3}" "FAIL"
                                fi
                            fi
                        else
                            if [ "${f6}" -lt "${f5}" ]; then
                                SUBTESTSCORE=$((${SUBTESTSCORE} - 1))
                                continue
                            else
                                Display --indent "${INDENT}" --text "- ${f2}" --result "FAIL" --color RED
                                ReportLine "${f1}" "${f2}" "${f3}" "FAIL"
                            fi
                        fi
                    ;;

                    TESTCASE_EQUAL)
                        alias current_command="${f7}"
                        FIND=$(current_command 2> /dev/null | grep "${f8}" 2> /dev/null)                    
                        if [ ! "${FIND}" =  "" ]; then
                            if [ "${f6}" -lt "${f5}" ]; then
                                continue
                            else if [ "${SUBTESTSCORE}" = 1 ]; then
                                    AddScore ${f3}
                                    Display --indent "${INDENT}" --text "- ${f2}" --result "OK" --color GREEN
                                    ReportLine "${f1}" "${f2}" "${f3}" "OK"
                                else
                                    Display --indent "${INDENT}" --text "- ${f2}" --result "FAIL" --color RED
                                    ReportLine "${f1}" "${f2}" "${f3}" "FAIL"
                                fi
                            fi
                        else
                            if [ "${f6}" -lt "${f5}" ]; then
                                SUBTESTSCORE=$((${SUBTESTSCORE} - 1))
                                continue
                            else
                                Display --indent "${INDENT}" --text "- ${f2}" --result "FAIL" --color RED
                                ReportLine "${f1}" "${f2}" "${f3}" "FAIL"
                            fi
                        fi
                    ;;

                    *)
                        Display --indent "${INDENT}" --text "- ${f2}" --result "N/A " --color WHITE
                        ReportLine "${f1}" "${f2}" "${f3}" "N/A"
                    ;;
                esac
                TotalScore ${f3}
                SUBTESTSCORE=1
                TESTCOUNT=$((TESTCOUNT + 1))
            fi
        else
            if [[ "${f1}" =~ ^[0-9]+$ ]]; then
                echo -e "\n[+] ${YELLOW}${f1} ${f2}${NORMAL}\n----------------------------------------"
                ReportLine "${f1}" "${f2}"
            else
                echo -e "  - ${f1} ${f2}"
                ReportLine "${f1}" "${f2}"
            fi
        fi
    done < ${TESTINPUT}

    SummaryReport
}

if [[ "${__name__}" == "__main__" ]]; then
    main
fi

