#!/bin/sh
#===============================================================================
# Functions extension of centos6
#===============================================================================
   Function_542() {
        egrep -v "^\+" /etc/passwd | awk -F: '($1!="root" && $1!="sync" &&
        $1!="shutdown" && $1!="halt" && $3<500 && $7!="/sbin/nologin" &&
        $7!="/bin/false") {print}'
    }

    Function_6110() {
        OUTPUT=$(df --local -P | awk "{if (NR!=1) print $6}" | xargs -I '{}' find '{}' -xdev -type f -perm -0002)
        echo ${OUTPUT} | grep -v "No such file"
    }

    Function_6111() {
        OUTPUT=$(df --local -P | awk "{if (NR!=1) print $6}" | xargs -I '{}' find '{}' -xdev -nouser)
        echo ${OUTPUT} | grep -v "No such file"
    }

    Function_6112() {
        OUTPUT=$(df --local -P | awk "{if (NR!=1) print $6}" | xargs -I '{}' find '{}' -xdev -nogroup)
        echo ${OUTPUT} | grep -v "No such file"
    }

    Function_6113() {
        OUTPUT=$(df --local -P | awk "{if (NR!=1) print $6}" | xargs -I '{}' find '{}' -xdev -type f -perm -4000)
        echo ${OUTPUT} | grep -v "No such file"
    }

    Function_6114() {
        OUTPUT=$(df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type f -perm -2000)
        echo ${OUTPUT} | grep -v "No such file"
    }

    Function_621() {
        cat /etc/shadow | awk -F: '($2 == "" ) { print $1 " does not have a password "}'
    }

    Function_625() {
        cat /etc/passwd | awk -F: '($3 == 0) { print $1 }'
    }

    Function_626() {
        if [ "`echo $PATH | grep ::`" != "" ]; then
            echo "Empty Directory in PATH (::)"
        fi
        if [ "`echo $PATH | grep :$`" != "" ]; then
            echo "Trailing : in PATH"
        fi
        p=`echo $PATH | sed -e 's/::/:/' -e 's/:$//' -e 's/:/ /g'`
        set -- $p
        while [ "$1" != "" ]; do
            if [ "$1" = "." ]; then
                echo "PATH contains ."
                shift
                continue
            fi
        if [ -d $1 ]; then
            dirperm=`ls -ldH $1 | cut -f1 -d" "`
            if [ `echo $dirperm | cut -c6` != "-" ]; then
                echo "Group Write permission set on directory $1"
            fi
            if [ `echo $dirperm | cut -c9` != "-" ]; then
                echo "Other Write permission set on directory $1"
            fi
            dirown=`ls -ldH $1 | awk '{print $3}'`
            if [ "$dirown" != "root" ] ; then
                echo $1 is not owned by root
            fi
        else
            echo $1 is not a directory
        fi
        shift
        done
    }

    Function_627() {
        cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do
            if [ $uid -ge 1000 -a ! -d "$dir" -a $user != "nfsnobody" ]; then
                echo "The home directory ($dir) of user $user does not exist."
            fi
        done
    }

    Function_628() {
        for dir in `cat /etc/passwd | egrep -v '(root|halt|sync|shutdown)' | awk -F: '($7 != "/sbin/nologin") { print $6 }'`; do
            dirperm=`ls -ld $dir | cut -f1 -d" "`
            if [ `echo $dirperm | cut -c6` != "-" ]; then
                echo "Group Write permission set on directory $dir"
            fi
            if [ `echo $dirperm | cut -c8` != "-" ]; then
                echo "Other Read permission set on directory $dir"
            fi
            if [ `echo $dirperm | cut -c9` != "-" ]; then
                echo "Other Write permission set on directory $dir"
            fi
            if [ `echo $dirperm | cut -c10` != "-" ]; then
                echo "Other Execute permission set on directory $dir"
            fi
        done
    }

    Function_629() {
        cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do
            if [ $uid -ge 1000 -a -d "$dir" -a $user != "nfsnobody" ]; then
                owner=$(stat -L -c "%U" "$dir")
                if [ "$owner" != "$user" ]; then
                    echo "The home directory ($dir) of user $user is owned by $owner."
                fi
            fi
        done
    }

    Function_6210() {
    for dir in `cat /etc/passwd | egrep -v '(root|sync|halt|shutdown)' | awk -F: '($7 != "/sbin/nologin") { print $6 }'`; do
        for file in $dir/.[A-Za-z0-9]*; do
            if [ ! -h "$file" -a -f "$file" ]; then
                fileperm=`ls -ld $file | cut -f1 -d" "`
                if [ `echo $fileperm | cut -c6` != "-" ]; then
                    echo "Group Write permission set on file $file"
                fi
                if [ `echo $fileperm | cut -c9` != "-" ]; then
                    echo "Other Write permission set on file $file"
                fi
            fi
        done
    done
    }

    Function_6211() {
        for dir in `cat /etc/passwd |\
            awk -F: '{ print $6 }'`; do
            if [ ! -h "$dir/.forward" -a -f "$dir/.forward" ]; then
                echo ".forward file $dir/.forward exists"
            fi
        done
    }

    Function_6212() {
        for dir in `cat /etc/passwd |\
            awk -F: '{ print $6 }'`; do
            if [ ! -h "$dir/.netrc" -a -f "$dir/.netrc" ]; then
                echo ".netrc file $dir/.netrc exists"
            fi
        done
    }

    Function_6213() {
        for dir in `cat /etc/passwd | egrep -v '(root|sync|halt|shutdown)' | awk -F: '($7 != "/sbin/nologin") { print $6 }'`; do
            for file in $dir/.netrc; do
                if [ ! -h "$file" -a -f "$file" ]; then
                    fileperm=`ls -ld $file | cut -f1 -d" "`
                    if [ `echo $fileperm | cut -c5` != "-" ]; then
                        echo "Group Read set on $file"
                    fi
                    if [ `echo $fileperm | cut -c6` != "-" ]; then
                        echo "Group Write set on $file"
                    fi
                    if [ `echo $fileperm | cut -c7` != "-" ]; then
                        echo "Group Execute set on $file"
                    fi
                    if [ `echo $fileperm | cut -c8` != "-" ]; then
                        echo "Other Read set on $file"
                    fi
                    if [ `echo $fileperm | cut -c9` != "-" ]; then
                        echo "Other Write set on $file"
                    fi
                    if [ `echo $fileperm | cut -c10` != "-" ]; then
                        echo "Other Execute set on $file"
                    fi
                fi
                done
        done
    }

    Function_6214() {
        for dir in `cat /etc/passwd | egrep -v '(root|halt|sync|shutdown)' | awk -F: '($7 != "/sbin/nologin") { print $6 }'`; do
            for file in $dir/.rhosts; do
                if [ ! -h "$file" -a -f "$file" ]; then
                    echo ".rhosts file in $dir"
                fi
            done
        done
    }

    Function_6215() {
        for i in $(cut -s -d: -f4 /etc/passwd | sort -u ); do
            grep -q -P "^.*?:[^:]*:$i:" /etc/group
            if [ $? -ne 0 ]; then
                echo "Group $i is referenced by /etc/passwd but does not exist in /etc/group"
            fi
        done
    }

    Function_6216() {
        cat /etc/passwd | cut -f3 -d":" | sort -n | uniq -c | while read x ; do
            [ -z "${x}" ] && break
            set - $x
            if [ $1 -gt 1 ]; then
                users=`awk -F: '($3 == n) { print $1 }' n=$2 /etc/passwd | xargs`
                echo "Duplicate UID ($2): ${users}"
            fi
        done
    }

    Function_6217() {
        cat /etc/group | cut -f3 -d":" | sort -n | uniq -c | while read x ; do
            [ -z "${x}" ] && break
            set - $x
            if [ $1 -gt 1 ]; then
                groups=`awk -F: '($3 == n) { print $1 }' n=$2 /etc/group | xargs`
                echo "Duplicate GID ($2): ${groups}"
            fi
        done
    }

    Function_6218() {
        cat /etc/passwd | cut -f1 -d":" | sort -n | uniq -c | while read x ; do
            [ -z "${x}" ] && break
            set - $x
            if [ $1 -gt 1 ]; then
                uids=`awk -F: '($1 == n) { print $3 }' n=$2 /etc/passwd | xargs`
                echo "Duplicate User Name ($2): ${uids}"
            fi
        done
    }

    Function_6219() {
        cat /etc/group | cut -f1 -d":" | sort -n | uniq -c | while read x ; do
            [ -z "${x}" ] && break
            set - $x
            if [ $1 -gt 1 ]; then
                gids=`gawk -F: '($1 == n) { print $3 }' n=$2 /etc/group | xargs`
                echo "Duplicate Group Name ($2): ${gids}"
            fi
        done
    }

#===============================================================================
# centos6
